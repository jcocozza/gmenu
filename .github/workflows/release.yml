name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.3'

      - name: Install deps
        run:  sudo apt-get update && sudo apt-get install -y libgl1-mesa-dev xorg-dev

      - name: Install mingw-w64 for Windows builds
        if: matrix.goos == 'windows'
        run: sudo apt-get update && sudo apt-get install -y gcc-mingw-w64

      - name: build vars
        id: vars
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
          echo "COMMIT=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          echo "DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_ENV"

      - name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
        run: |
          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}
          BIN_NAME=gmenu-${GOOS}-${GOARCH}${{ matrix.ext }}

          if [ "$GOOS" =  "windows" ]; then
            export  CC=x86_64-w64-mingw32-gcc
          fi

          go build -v -o "$BIN_NAME" -ldflags "-X 'main.Version=${VERSION}' -X main.Commit=${COMMIT} -X main.Date=${DATE}"

      - name: zip
        run: |
          BIN_NAME=gmenu-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
          zip "${BIN_NAME}.zip" "${BIN_NAME}"


      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          files: gmenu-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
