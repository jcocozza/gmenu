name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: amd64
          - os: macos-14
            platform: darwin
            arch: amd64
          - os: macos-14
            platform: darwin
            arch: arm64
          - os: ubuntu-latest
            platform: windows
            arch: amd64

    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.platform }}-${{ matrix.arch }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment vars
        id: vars
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
          echo "COMMIT=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          echo "DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_ENV"
          echo "EXT=" >> "$GITHUB_ENV"
          if [ "${{ matrix.platform }}" = "windows" ]; then
            echo "EXT=.exe" >> "$GITHUB_ENV"
          fi

      	# --- Linux Build ---
		- name: Install Linux deps
		if: matrix.platform == 'linux'
		run: sudo apt update && sudo apt install -y build-essential zip libgl1-mesa-dev xorg-dev

		- name: Clone Raylib (Linux)
		if: matrix.platform == 'linux'
		run: |
				git clone --depth=1 https://github.com/raysan5/raylib.git

		- name: Build Raylib static lib (Linux)
		if: matrix.platform == 'linux'
		working-directory: ./raylib/src
		run: |
			gcc -c rcore.c rshapes.c rtext.c rmodels.c rtextures.c raudio.c utils.c \
			-I. -Iexternal -Iexternal/glfw/include -DPLATFORM_DESKTOP
			ar rcs ../../libraylib.a *.o

		- name: Build on Linux
		if: matrix.platform == 'linux'
		run: |
			gcc -O2 -flto -o gmenu-${{ matrix.platform }}-${{ matrix.arch }} \
			main.c \
			-Iraylib/src -Iraylib/src/external -Iraylib/src/external/glfw/include \
			libraylib.a -lGL -lm -ldl -lpthread -lrt -lX11


      # --- macOS Build ---
      - name: Install macOS deps
        if: matrix.platform == 'darwin'
        run: brew install raylib

      - name: Build macOS
        if: matrix.platform == 'darwin'
        run: |
          make release
          mv gmenu gmenu-${{ matrix.platform }}-${{ matrix.arch }}${EXT}

      # --- Windows Build ---
      - name: Install mingw and deps
        if: matrix.platform == 'windows'
        run: |
          sudo apt update
          sudo apt install -y gcc-mingw-w64 zip make

      - name: Clone Raylib
        if: matrix.platform == 'windows'
        run: |
          git clone --depth=1 https://github.com/raysan5/raylib.git

      - name: Build Raylib static lib (libraylib.a)
        if: matrix.platform == 'windows'
        working-directory: ./raylib/src
        run: |
          x86_64-w64-mingw32-gcc -c rcore.c rshapes.c rtext.c rmodels.c rtextures.c raudio.c utils.c \
            -I. -Iexternal -Iexternal/glfw/include -DPLATFORM_DESKTOP
          ar rcs ../../libraylib.a *.o

      - name: Build your Windows app
        if: matrix.platform == 'windows'
        run: |
          x86_64-w64-mingw32-gcc main.c -o gmenu-${{ matrix.platform }}-${{ matrix.arch }}.exe \
            -Iraylib/src -Iraylib/src/external -Iraylib/src/external/glfw/include \
            libraylib.a -lopengl32 -lgdi32 -lwinmm -lshell32

      # --- Zip binary ---
      - name: Zip binary
        run: |
          zip gmenu-${{ matrix.platform }}-${{ matrix.arch }}${EXT}.zip gmenu-${{ matrix.platform }}-${{ matrix.arch }}${EXT}

      # --- Upload to GitHub Release ---
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: gmenu-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
